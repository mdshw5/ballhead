#!/usr/bin/env python26
"""This script is meant to wait for handler.py to finish,
and then format the results from triPOD"""

import os
import sys
import time
import re
import string

_PID = sys.argv[1]
_RESULTS_DIR = sys.argv[2]
_UPLOADED_FILE = sys.argv[3]
_MD5_HASH = sys.argv[4]
_FILE_NAME = sys.argv[5]
_RESULTS_URL = sys.argv[6]
_MESSAGE = sys.argv[7]
_BUILD = sys.argv[8]
_LOG_FILE = sys.argv[9]
_CONFIG = 'config.py'
execfile(_CONFIG)
_LOG = open(_RESULTS_DIR + '/log', 'w')
_ORIG_STDERR = sys.stderr
sys.stderr = _LOG

_LOG.write('initialized\n')
_LOG.write('%s\n' % _RESULTS_DIR)
_LOG.write('%s\n' % _UPLOADED_FILE)

time.sleep(5)

_TIMER = 0
_PROGRESS = open(_LOG_FILE, 'r')
while os.path.exists("/proc/" + _PID):
    time.sleep(1)
    _TIMER += 1
    if _TIMER is 10:
        _TIMER = 0
        _PROGRESS.seek(0)
        _PROGRESS_TEXT = _PROGRESS.read().splitlines()
        _PROGRESS_TEXT = [i.replace(_APACHE_ROOT, '') for i in _PROGRESS_TEXT]
        _PROGRESS_TEXT = "\n".join(map(str, _PROGRESS_TEXT))
        _RESULTS = open(_RESULTS_DIR + '/results.php', 'w')
        _RESULTS.write('''
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<script>
self_refresh=window.setTimeout(function()
{window.location.href=window.location.href},10000);
</script>
<noscript>
<meta http-equiv="refresh" content="10">
</noscript>
<title>Processing sample %s...</title>
<link rel="stylesheet" type="text/css" href="../../triPOD.css">
<?php include '../../header.php'; ?>
</head>
<body>
<pre>
%s<p>
%s
</pre>
</body></html> ''' % (_FILE_NAME, _MESSAGE, _PROGRESS_TEXT))
        _RESULTS.close()
_PROGRESS.close()
_RESULTS_DIR_LISTING = os.listdir(_RESULTS_DIR)

_PNG = re.compile("png$")
_TXT = re.compile("txt$")
_BED = re.compile("bed$")
_IMAGES = []
for _ITEM in _RESULTS_DIR_LISTING:
    if re.search(_PNG, _ITEM):
        _IMAGES.append(_ITEM)
    elif re.search(_TXT, _ITEM):
        _TXTRESULTS = _ITEM
    elif re.search(_BED, _ITEM):
        _BEDRESULTS = _ITEM
    else:
        continue

_TABLE = open(_RESULTS_DIR + '/' + _TXTRESULTS, 'r+')
_TXT_TABLE = _TABLE.read().splitlines()
del _TXT_TABLE[0:6] # remove before table
_TXT_TABLE[-1] = _TXT_TABLE[-1].replace(_CGI_ROOT,'')
_TXT_TABLE[-1] = _TXT_TABLE[-1].replace(_HTML_ROOT,'')
_TABLE.seek(0)
for line in _TXT_TABLE:
    _TABLE.write("%s\n" % line) # write sanitized table
_TABLE.truncate()
_TABLE.close()
for _ in range(4):
    del _TXT_TABLE[-1] #remove after table
_SPLIT_TABLE = [line.split() for line in _TXT_TABLE]
_HEADER_TABLE = _SPLIT_TABLE.pop(0)
_CHROMS = list([int(i[1]) for i in _SPLIT_TABLE])
_UNIQ_CHROMS = list(set(_CHROMS))
_FREQS = [(i, _CHROMS.count(i)) for i in _UNIQ_CHROMS]
_RESULTS = open(_RESULTS_DIR + '/results.php', 'w')
_RESULTS.write('''
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>triPOD results for sample %s</title>
<link rel="stylesheet" type="text/css" href="../../triPOD.css">
<style type="text/css">
table
{border-collapse:collapse;}
table, td, th
{border:1px solid black;}
</style>
</head>
<body>
<?php include '../../header.php'; ?>
''' % _FILE_NAME)

# Find the largest anomaly detected, so we can pass coords to UCSC
_STARTS = list([int(i[2]) for i in _SPLIT_TABLE])
_ENDS = list([int(i[3]) for i in _SPLIT_TABLE])
_BP = list([int(i[8]) for i in _SPLIT_TABLE])
_MAX_BP = max(_BP)
_MAX_INDEX = _BP.index(_MAX_BP)
_MAX_START = _STARTS[_MAX_INDEX]
_MAX_END = _ENDS[_MAX_INDEX]
_MAX_CHR = _CHROMS[_MAX_INDEX]
_UCSC_POS = 'chr' + str(_MAX_CHR) + ':' + str(_MAX_START) + '-' + str(_MAX_END)
_UCSC_URL = _RESULTS_URL + '/' + _BEDRESULTS
_RESULTS.write('''<p><center><table id="top">
<tr><td rowspan="3">Regions detected in sample %s</td>
<td><a href='%s'>Download results table as text file.</a></td></tr>
<tr><td><a href='%s'>Download results table as bed file.</a></td></tr>
<tr><td><a href="http://genome.ucsc.edu/cgi-bin/hgTracks?db=%s&position=%s&org=human&hgt.customText=%s" target="_blank">View results in UCSC Genome Browser</a></td></tr></table>''' % (_FILE_NAME, _TXTRESULTS, _BEDRESULTS, _BUILD, _UCSC_POS, _UCSC_URL))

_RESULTS.write('<table><tr><th>Image</th>')
for header in _HEADER_TABLE[1:9]:
    _RESULTS.write('''<th>%s</th>''' % header)

for c in _UNIQ_CHROMS:
    indices = [i for i, x in enumerate(_CHROMS) if x is c]
    _RESULTS.write('''
<tr><td rowspan="%s"><a href="#%s">View Chromosome %s</a>''' % (str(len(indices)), c, c))
    count = 0
    for n in indices:
        if count > 0:
            _RESULTS.write('<tr>')
        for cell in _SPLIT_TABLE[n][1:9]:
            _RESULTS.write('<td>%s</td>' % cell)
        count += 1
    _RESULTS.write('</tr>')

# Write images in to the table
for c in _UNIQ_CHROMS:
    indices = [i for i, x in enumerate(_CHROMS) if x is c]
    r = '\D' + str(c) + '.png$'
    _CHILD_IMAGE = str([x for x in _IMAGES if re.search(r, x)]).strip('[]')
    _RESULTS.write('''<tr><td colspan=9><img width="640" id="%s" src=%s><img></td></tr>
<tr><td colspan=9><a href="#top">Back to top</a></td></tr>''' % (c, _CHILD_IMAGE))
_RESULTS.write('</table>')

_RESULTS.write('''</center></body></html>''' )
_RESULTS.close()
sys.stderr = _ORIG_STDERR
_LOG.close()
if _SAMPLE_DATA is None:
    os.remove(_UPLOADED_FILE)
